{"ast":null,"code":"var _jsxFileName = \"C:\\\\assignment\\\\employee management system\\\\ems-frontend\\\\src\\\\employees\\\\FieldBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from '../api/axios'; // adjust path\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FieldBuilder() {\n  _s();\n  const [fields, setFields] = useState([]);\n  useEffect(() => {\n    fetchFields();\n  }, []);\n  const fetchFields = async () => {\n    try {\n      const response = await axios.get('/fields/');\n      setFields(response.data);\n    } catch (error) {\n      console.error('Failed to fetch fields', error);\n    }\n  };\n  const handleDragEnd = async result => {\n    if (!result.destination) return;\n    const reordered = Array.from(fields);\n    const [movedItem] = reordered.splice(result.source.index, 1);\n    reordered.splice(result.destination.index, 0, movedItem);\n    setFields(reordered);\n\n    // Prepare payload\n    const updatedPositions = reordered.map((item, index) => ({\n      id: item.id,\n      position: index\n    }));\n    try {\n      await axios.post('/fields/reorder/', updatedPositions);\n    } catch (error) {\n      console.error('Failed to update field positions', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mb-3\",\n      children: \"\\uD83E\\uDDF2 Reorder Form Fields\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"field-list\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [fields.map((field, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: field.id.toString(),\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item d-flex justify-content-between align-items-center\",\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              children: [field.label, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-muted\",\n                children: \"\\u2630\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this)\n          }, field.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(FieldBuilder, \"roPUCwoXNDcxiY89S1aTwYLImQU=\");\n_c = FieldBuilder;\nexport default FieldBuilder;\nvar _c;\n$RefreshReg$(_c, \"FieldBuilder\");","map":{"version":3,"names":["React","useState","useEffect","axios","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","FieldBuilder","_s","fields","setFields","fetchFields","response","get","data","error","console","handleDragEnd","result","destination","reordered","Array","from","movedItem","splice","source","index","updatedPositions","map","item","id","position","post","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","field","draggableId","toString","draggableProps","dragHandleProps","label","placeholder","_c","$RefreshReg$"],"sources":["C:/assignment/employee management system/ems-frontend/src/employees/FieldBuilder.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from '../api/axios'; // adjust path\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nfunction FieldBuilder() {\r\n  const [fields, setFields] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchFields();\r\n  }, []);\r\n\r\n  const fetchFields = async () => {\r\n    try {\r\n      const response = await axios.get('/fields/');\r\n      setFields(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch fields', error);\r\n    }\r\n  };\r\n\r\n  const handleDragEnd = async (result) => {\r\n    if (!result.destination) return;\r\n\r\n    const reordered = Array.from(fields);\r\n    const [movedItem] = reordered.splice(result.source.index, 1);\r\n    reordered.splice(result.destination.index, 0, movedItem);\r\n\r\n    setFields(reordered);\r\n\r\n    // Prepare payload\r\n    const updatedPositions = reordered.map((item, index) => ({\r\n      id: item.id,\r\n      position: index,\r\n    }));\r\n\r\n    try {\r\n      await axios.post('/fields/reorder/', updatedPositions);\r\n    } catch (error) {\r\n      console.error('Failed to update field positions', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h5 className=\"mb-3\">ðŸ§² Reorder Form Fields</h5>\r\n\r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        <Droppable droppableId=\"field-list\">\r\n          {(provided) => (\r\n            <ul\r\n              className=\"list-group\"\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              {fields.map((field, index) => (\r\n                <Draggable key={field.id} draggableId={field.id.toString()} index={index}>\r\n                  {(provided) => (\r\n                    <li\r\n                      className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    >\r\n                      {field.label} <span className=\"text-muted\">â˜°</span>\r\n                    </li>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </ul>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FieldBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}