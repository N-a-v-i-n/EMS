{"ast":null,"code":"import axios from 'axios';\nconst baseURL = 'http://127.0.0.1:8000/api/';\nconst axiosInstance = axios.create({\n  baseURL,\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem('access')}`\n  }\n});\n\n// Handle expired access token\naxiosInstance.interceptors.response.use(response => response, async error => {\n  var _error$response, _error$response$data;\n  const originalRequest = error.config;\n\n  // if token is invalid and hasn't been retried yet\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.code) === 'token_not_valid' && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const res = await axios.post(`${baseURL}accounts/token/refresh/`, {\n        refresh: localStorage.getItem('refresh')\n      });\n      const newAccess = res.data.access;\n      localStorage.setItem('access', newAccess);\n      axiosInstance.defaults.headers['Authorization'] = `Bearer ${newAccess}`;\n      originalRequest.headers['Authorization'] = `Bearer ${newAccess}`;\n      return axiosInstance(originalRequest); // retry original request\n    } catch (err) {\n      console.error('Refresh token failed', err);\n      // optional: logout user here\n    }\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","baseURL","axiosInstance","create","headers","Authorization","localStorage","getItem","interceptors","response","use","error","_error$response","_error$response$data","originalRequest","config","status","data","code","_retry","res","post","refresh","newAccess","access","setItem","defaults","err","console","Promise","reject"],"sources":["C:/assignment/employee management system/ems-frontend/src/api/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseURL = 'http://127.0.0.1:8000/api/';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL,\r\n  headers: {\r\n    Authorization: `Bearer ${localStorage.getItem('access')}`,\r\n  },\r\n});\r\n\r\n// Handle expired access token\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    // if token is invalid and hasn't been retried yet\r\n    if (\r\n      error.response?.status === 401 &&\r\n      error.response.data?.code === 'token_not_valid' &&\r\n      !originalRequest._retry\r\n    ) {\r\n      originalRequest._retry = true;\r\n      try {\r\n        const res = await axios.post(`${baseURL}accounts/token/refresh/`, {\r\n          refresh: localStorage.getItem('refresh'),\r\n        });\r\n\r\n        const newAccess = res.data.access;\r\n        localStorage.setItem('access', newAccess);\r\n        axiosInstance.defaults.headers['Authorization'] = `Bearer ${newAccess}`;\r\n        originalRequest.headers['Authorization'] = `Bearer ${newAccess}`;\r\n\r\n        return axiosInstance(originalRequest); // retry original request\r\n      } catch (err) {\r\n        console.error('Refresh token failed', err);\r\n        // optional: logout user here\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,4BAA4B;AAE5C,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EACjCF,OAAO;EACPG,OAAO,EAAE;IACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EACzD;AACF,CAAC,CAAC;;AAEF;AACAL,aAAa,CAACM,YAAY,CAACC,QAAQ,CAACC,GAAG,CACpCD,QAAQ,IAAKA,QAAQ,EACtB,MAAOE,KAAK,IAAK;EAAA,IAAAC,eAAA,EAAAC,oBAAA;EACf,MAAMC,eAAe,GAAGH,KAAK,CAACI,MAAM;;EAEpC;EACA,IACE,EAAAH,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBI,MAAM,MAAK,GAAG,IAC9B,EAAAH,oBAAA,GAAAF,KAAK,CAACF,QAAQ,CAACQ,IAAI,cAAAJ,oBAAA,uBAAnBA,oBAAA,CAAqBK,IAAI,MAAK,iBAAiB,IAC/C,CAACJ,eAAe,CAACK,MAAM,EACvB;IACAL,eAAe,CAACK,MAAM,GAAG,IAAI;IAC7B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,GAAGpB,OAAO,yBAAyB,EAAE;QAChEqB,OAAO,EAAEhB,YAAY,CAACC,OAAO,CAAC,SAAS;MACzC,CAAC,CAAC;MAEF,MAAMgB,SAAS,GAAGH,GAAG,CAACH,IAAI,CAACO,MAAM;MACjClB,YAAY,CAACmB,OAAO,CAAC,QAAQ,EAAEF,SAAS,CAAC;MACzCrB,aAAa,CAACwB,QAAQ,CAACtB,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUmB,SAAS,EAAE;MACvET,eAAe,CAACV,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUmB,SAAS,EAAE;MAEhE,OAAOrB,aAAa,CAACY,eAAe,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZC,OAAO,CAACjB,KAAK,CAAC,sBAAsB,EAAEgB,GAAG,CAAC;MAC1C;IACF;EACF;EAEA,OAAOE,OAAO,CAACC,MAAM,CAACnB,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeT,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}